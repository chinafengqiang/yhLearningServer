<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.smlearning.infrastructure.dao.CourseMapper">
	<resultMap id="BaseResultMap" type="com.smlearning.domain.entity.Course">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="courseware_category_id" property="coursewareCategoryId"
			jdbcType="BIGINT" />
		<result column="lectuer" property="lectuer" jdbcType="VARCHAR" />
		<result column="hour" property="hour" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="created_time" property="createdTime" jdbcType="DATE" />
		<result column="creator" property="creator" jdbcType="BIGINT" />
		<result column="pic" property="pic" jdbcType="VARCHAR" />
		<result column="url" property="url" jdbcType="VARCHAR" />
		<result column="grade_id" property="gradeId" jdbcType="BIGINT" />
		<result column="ispublic" property="isPublic" jdbcType="INTEGER" />
	</resultMap>
	<resultMap id="ResultMapWithBLOBs" type="com.smlearning.domain.entity.CourseWithBLOBs"
		extends="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<result column="description" property="description" jdbcType="LONGVARCHAR" />
		<result column="teacher_description" property="teacherDescription"
			jdbcType="LONGVARCHAR" />
	</resultMap>

	<resultMap id="BaseResultMapExtend"
		type="com.smlearning.domain.entity.extend.CourseExtend">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="category_name" property="categoryName"
			jdbcType="VARCHAR" />
		<result column="lectuer" property="lectuer" jdbcType="VARCHAR" />
		<result column="hour" property="hour" jdbcType="INTEGER" />
		<result column="created_time" property="createdTime" jdbcType="DATE" />
		<result column="pic" property="pic" jdbcType="VARCHAR" />
		<result column="url" property="url" jdbcType="VARCHAR" />
		<result column="description" property="description" jdbcType="LONGVARCHAR" />
		<result column="grade_id" property="gradeId" jdbcType="BIGINT" />
		<result column="ispublic" property="isPublic" jdbcType="INTEGER" />
		<result column="teacher_description" property="teacherDescription"
			jdbcType="LONGVARCHAR" />
	</resultMap>

	<sql id="Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		id, name, courseware_category_id, lectuer, hour, status, pic, url,
		created_time, creator,grade_id,ispublic
	</sql>
	<sql id="Blob_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		description, teacher_description
	</sql>
	<select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs"
		parameterType="com.smlearning.domain.entity.CourseExample">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from course
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.smlearning.domain.entity.CourseExample">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from course
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from course
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from course
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample" parameterType="com.smlearning.domain.entity.CourseExample">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from course
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.smlearning.domain.entity.CourseWithBLOBs">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into course (id, name, courseware_category_id,
		lectuer, hour, status,
		pic, created_time, creator,
		description, teacher_description,
		url,grade_id,ispublic)
		values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR},
		#{coursewareCategoryId,jdbcType=BIGINT},
		#{lectuer,jdbcType=VARCHAR}, #{hour,jdbcType=INTEGER}, #{status,jdbcType=INTEGER},
		#{pic,jdbcType=VARCHAR}, #{createdTime,jdbcType=DATE},
		#{creator,jdbcType=BIGINT},
		#{description,jdbcType=LONGVARCHAR}, #{teacherDescription,jdbcType=LONGVARCHAR},
		#{url,jdbcType=LONGVARCHAR},#{gradeId,jdbcType=BIGINT},#{isPublic,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.smlearning.domain.entity.CourseWithBLOBs">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into course
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="coursewareCategoryId != null">
				courseware_category_id,
			</if>
			<if test="lectuer != null">
				lectuer,
			</if>
			<if test="hour != null">
				hour,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="pic != null">
				pic,
			</if>
			<if test="createdTime != null">
				created_time,
			</if>
			<if test="creator != null">
				creator,
			</if>
			<if test="description != null">
				description,
			</if>
			<if test="teacherDescription != null">
				teacher_description,
			</if>
			<if test="url != null">
				url,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="coursewareCategoryId != null">
				#{coursewareCategoryId,jdbcType=BIGINT},
			</if>
			<if test="lectuer != null">
				#{lectuer,jdbcType=VARCHAR},
			</if>
			<if test="hour != null">
				#{hour,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="pic != null">
				#{pic,jdbcType=VARCHAR},
			</if>
			<if test="createdTime != null">
				#{createdTime,jdbcType=DATE},
			</if>
			<if test="creator != null">
				#{creator,jdbcType=BIGINT},
			</if>
			<if test="description != null">
				#{description,jdbcType=LONGVARCHAR},
			</if>
			<if test="teacherDescription != null">
				#{teacherDescription,jdbcType=LONGVARCHAR},
			</if>
			<if test="url != null">
				#{url,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.smlearning.domain.entity.CourseExample"
		resultType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select count(*) from course
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update course
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=BIGINT},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.coursewareCategoryId != null">
				courseware_category_id =
				#{record.coursewareCategoryId,jdbcType=BIGINT},
			</if>
			<if test="record.lectuer != null">
				lectuer = #{record.lectuer,jdbcType=VARCHAR},
			</if>
			<if test="record.hour != null">
				hour = #{record.hour,jdbcType=INTEGER},
			</if>
			<if test="record.status != null">
				status = #{record.status,jdbcType=INTEGER},
			</if>
			<if test="record.pic != null">
				pic = #{record.pic,jdbcType=VARCHAR},
			</if>
			<if test="record.createdTime != null">
				created_time = #{record.createdTime,jdbcType=DATE},
			</if>
			<if test="record.creator != null">
				creator = #{record.creator,jdbcType=BIGINT},
			</if>
			<if test="record.description != null">
				description = #{record.description,jdbcType=LONGVARCHAR},
			</if>
			<if test="record.teacherDescription != null">
				teacher_description = #{record.teacherDescription,jdbcType=LONGVARCHAR},
			</if>
			<if test="record.url != null">
				url = #{record.url,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExampleWithBLOBs" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update course
		set id = #{record.id,jdbcType=BIGINT},
		name = #{record.name,jdbcType=VARCHAR},
		courseware_category_id = #{record.coursewareCategoryId,jdbcType=BIGINT},
		lectuer = #{record.lectuer,jdbcType=VARCHAR},
		hour = #{record.hour,jdbcType=INTEGER},
		status = #{record.status,jdbcType=INTEGER},
		pic = #{record.pic,jdbcType=VARCHAR},
		created_time = #{record.createdTime,jdbcType=DATE},
		creator = #{record.creator,jdbcType=BIGINT},
		description = #{record.description,jdbcType=LONGVARCHAR},
		teacher_description = #{record.teacherDescription,jdbcType=LONGVARCHAR},
		url = #{record.url,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update course
		set id = #{record.id,jdbcType=BIGINT},
		name = #{record.name,jdbcType=VARCHAR},
		courseware_category_id = #{record.coursewareCategoryId,jdbcType=BIGINT},
		lectuer = #{record.lectuer,jdbcType=VARCHAR},
		hour = #{record.hour,jdbcType=INTEGER},
		status = #{record.status,jdbcType=INTEGER},
		pic = #{record.pic,jdbcType=VARCHAR},
		created_time = #{record.createdTime,jdbcType=DATE},
		creator = #{record.creator,jdbcType=BIGINT}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.smlearning.domain.entity.CourseWithBLOBs">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update course
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="coursewareCategoryId != null">
				courseware_category_id = #{coursewareCategoryId,jdbcType=BIGINT},
			</if>
			<if test="lectuer != null">
				lectuer = #{lectuer,jdbcType=VARCHAR},
			</if>
			<if test="hour != null">
				hour = #{hour,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="pic != null">
				pic = #{pic,jdbcType=VARCHAR},
			</if>
			<if test="createdTime != null">
				created_time = #{createdTime,jdbcType=DATE},
			</if>
			<if test="creator != null">
				creator = #{creator,jdbcType=BIGINT},
			</if>
			<if test="description != null">
				description = #{description,jdbcType=LONGVARCHAR},
			</if>
			<if test="teacherDescription != null">
				teacher_description = #{teacherDescription,jdbcType=LONGVARCHAR},
			</if>
			<if test="url != null">
				url = #{url,jdbcType=VARCHAR},
			</if>
			<if test="gradeId != null">
				grade_id = #{gradeId,jdbcType=BIGINT},
			</if>
			<if test="isPublic != null">
				ispublic = #{isPublic,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.smlearning.domain.entity.CourseWithBLOBs">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update course
		set name = #{name,jdbcType=VARCHAR},
		courseware_category_id = #{coursewareCategoryId,jdbcType=BIGINT},
		lectuer = #{lectuer,jdbcType=VARCHAR},
		hour = #{hour,jdbcType=INTEGER},
		status = #{status,jdbcType=INTEGER},
		pic = #{pic,jdbcType=VARCHAR},
		created_time = #{createdTime,jdbcType=DATE},
		creator = #{creator,jdbcType=BIGINT},
		description = #{description,jdbcType=LONGVARCHAR},
		teacher_description = #{teacherDescription,jdbcType=LONGVARCHAR},
		url = #{url,jdbcType=LONGVARCHAR}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.smlearning.domain.entity.Course">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update course
		set name = #{name,jdbcType=VARCHAR},
		courseware_category_id = #{coursewareCategoryId,jdbcType=BIGINT},
		lectuer = #{lectuer,jdbcType=VARCHAR},
		hour = #{hour,jdbcType=INTEGER},
		status = #{status,jdbcType=INTEGER},
		pic = #{pic,jdbcType=VARCHAR},
		created_time = #{createdTime,jdbcType=DATE},
		creator = #{creator,jdbcType=BIGINT}
		where id = #{id,jdbcType=BIGINT}
	</update>

	<!-- 配置分页用Select -->
	<select id="selectByExamplePaging" resultMap="BaseResultMap"
		parameterType="com.smlearning.domain.entity.Course">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from course
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		limit #{offset,jdbcType=INTEGER} , #{limit,jdbcType=INTEGER}
		<!-- LIMIT 1,20 -->
	</select>

	<!-- 配置Select -->
	<select id="selectByExampleAll" resultMap="BaseResultMapExtend"
		parameterType="com.smlearning.domain.entity.extend.CourseExtend">
		select a.id, a.name, a.lectuer, a.hour, a.pic, a.url,
		a.created_time,b.name as category_name, description,
		teacher_description
		from course a, courseware_category b
		where a.courseware_category_id =b.id and a.creator=#{creator}
	</select>

	<!-- 配置Select -->
	<select id="selectByExampleId" resultMap="BaseResultMapExtend"
		parameterType="com.smlearning.domain.entity.extend.CourseExtend">
		select a.id, a.name, a.lectuer, a.hour, a.pic, a.url,
		a.created_time,b.name as category_name, description,
		teacher_description
		from course a, courseware_category b
		where a.courseware_category_id =b.id and a.id=#{id}
	</select>


	<select id="getCourseList" resultType="java.util.HashMap">
		select a.id, a.status, a.name, a.url, a.created_time as
		strCreateTime,a.grade_id,a.lectuer,b.name as categoryName, a.creator,
		a.pic,
		g.name as gradeName
		from course a left join courseware_category b on a.courseware_category_id
		=b.id left join sys_grade g on a.grade_id = g.id
		where b.use_type=0
		<if test="name != null  and  name !='' ">
			and a.name LIKE CONCAT(CONCAT('%', #{name}),'%')
		</if>
		<if test="startTime != null  and  startTime !=''">
			and a.created_time > #{startTime}
		</if>
		<if test="endTime != null  and  endTime !=''">
    <![CDATA[	and a.created_time < #{endTime} ]]>
		</if>
		<if test="gradeId != null">
			and a.grade_id = #{gradeId}
		</if>
		<if test="category != null">
			and a.courseware_category_id = #{category}
		</if>
		<if test="status != null">
			and a.status = #{status}
		</if>
		<if test="sort != null">
			order by ${sort} ${order}
		</if>
	</select>

	<delete id="deleteCourse">
		delete from course where id in (${ids})
	</delete>

	<select id="getCourseListByIds" resultType="java.util.HashMap">
		select * from course where id in ( ${ids} )
	</select>
	
	<update id="modifyCourseStautsByIds" parameterType="java.util.HashMap">
    update course set status = 2 where id in (${ids})
  	</update>
  	
		<select id="getPermCourses" resultType="java.util.HashMap" parameterType="java.util.HashMap">
	select a.id, a.name, a.lectuer, a.hour, a.pic, a.url,
		a.created_time as createdTime,b.name as categoryName,b.id as categoryId, a.description,
		a.teacher_description as teacherDescription
		from course a, courseware_category b
		where a.courseware_category_id =b.id and a.grade_id = #{gradeId} 
		union
		select a.id, a.name, a.lectuer, a.hour, a.pic, a.url,
		a.created_time as createdTime,b.name as categoryName,b.id as categoryId, a.description,
		a.teacher_description as teacherDescription
		from course a, courseware_category b
		where a.courseware_category_id =b.id and a.ispublic = 1 
	 </select>
	 
	<select id="getLessonList" resultType="java.util.HashMap">
		select lesn.*,g.name as gradeName from lesson_define lesn left join sys_grade g on lesn.GRADE_ID = g.id where (1=1)
		<if test="gradeId != null">
			and GRADE_ID = #{gradeId}
		</if>

		<if test="sort != null">
			order by ${sort} ${order}
		</if>
	</select>
	
	<select id="getLessonTempList" resultType="java.util.HashMap">
		select lesn.*,g.name as gradeName from lesson_temp_define lesn left join sys_grade g on lesn.GRADE_ID = g.id where (1=1)
		<if test="gradeId != null">
			and GRADE_ID = #{gradeId}
		</if>

		<if test="sort != null">
			order by ${sort} ${order}
		</if>
	</select>
	
	<select id="getLessonDetailList" resultType="java.util.HashMap">
		select * from lesson_define_detail where LESSON_ID = #{lessonId} order by LESSON_NUM
	</select>
	
	<select id="getLessonTempDetailList" resultType="java.util.HashMap">
		select * from lesson_temp_define_detail where LESSON_ID = #{lessonId} order by LESSON_NUM
	</select>
	
	<delete id="deleteLessonDetail">
		delete from lesson_define_detail where LESSON_ID in (${ids})
	</delete>
	
	<delete id="deleteLesson">
		delete from lesson_define where id in (${ids})
	</delete>
	
	<select id="getPermLessonList" resultType="java.util.HashMap">
		select d.ID as lid,dd.LESSON_NUM as lnum,dd.LESSON_TIME as ltime,dd.WEEK_ONE_LESSON as lwone,
		dd.WEEK_TWO_LESSON as lwtwo,dd.WEEK_THREE_LESSON as lwthree,dd.WEEK_FOUR_LESSON as lwfour,
		dd.WEEK_FIVE_LESSON as lwfive,dd.WEEK_SIX_LESSON as lwsix,dd.WEEK_SEVEN_LESSON as lwseven,d.NAME as lname 
		from lesson_define d inner join lesson_define_detail dd on d.ID = dd.LESSON_ID
		where d.TERM = #{TERM} and d.GRADE_ID = #{GRADE_ID} order by dd.ID
	</select>
	
	<delete id="deleteLessonPlans">
		 <![CDATA[delete from lesson_plans where LESSON_ID = #{lessonId} and START_DATE <= #{date} and END_DATE >= #{date} ]]>
	</delete>
	
	<delete id="deleteLessonTempPlans">
		 <![CDATA[delete from lesson_temp_plans where LESSON_ID = #{lessonId} and START_DATE <= #{date} and END_DATE >= #{date} ]]>
	</delete>
	
	<select id="getLessonPlan" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		 <![CDATA[select * from lesson_plans where LESSON_ID = #{lessonId} and START_DATE <= #{date} and END_DATE >= #{date} and LESSON_NUM = #{lessonNum} and LESSON_WEEK = #{lessonWeek} ]]>
	</select>
	
	<delete id="deleteLessonTempDetail">
		delete from lesson_temp_define_detail where LESSON_ID in (${ids})
	</delete>
	
	<delete id="deleteLessonTemp">
		delete from lesson_temp_define where id in (${ids})
	</delete>
	
	 <select id="getCategoryplanList" resultType="java.util.HashMap">
		select a.*,g.name as gradeName from term_plan a  left join sys_grade g on a.grade_id = g.id
		where (1=1)
		<if test="name != null  and  name !='' ">
			and a.NAME LIKE CONCAT(CONCAT('%', #{name}),'%')
		</if>
		<if test="gradeId != null">
			and a.GRADE_ID = #{gradeId}
		</if>
		<if test="category != null">
			and a.CATEGORY_ID = #{category}
		</if>
		<if test="sort != null">
			order by ${sort} ${order}
		</if>
	</select>
	
	<select id="getLessonTempId" resultType="java.util.HashMap">
		<![CDATA[select ID from lesson_temp_define where GRADE_ID = #{GRADE_ID} and START_DATE <= #{NOW_TIME} and END_DATE >= #{NOW_TIME}]]>
	</select>
	
	<select id="getPermLessonTempList" resultType="java.util.HashMap">
		select dd.LESSON_ID as lid,dd.LESSON_NUM as lnum,dd.LESSON_TIME as ltime,dd.WEEK_ONE_LESSON as lwone,
		dd.WEEK_TWO_LESSON as lwtwo,dd.WEEK_THREE_LESSON as lwthree,dd.WEEK_FOUR_LESSON as lwfour,
		dd.WEEK_FIVE_LESSON as lwfive,dd.WEEK_SIX_LESSON as lwsix,dd.WEEK_SEVEN_LESSON as lwseven,d.NAME as lname 
		from lesson_temp_define_detail dd inner join lesson_temp_define d on d.ID = dd.LESSON_ID
		where dd.LESSON_ID = #{LESSON_ID}  order by dd.ID
	</select>
	
	<select id="getLessonTempPlan" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		 <![CDATA[select * from lesson_temp_plans where LESSON_ID = #{lessonId} and START_DATE <= #{date} and END_DATE >= #{date} and LESSON_NUM = #{lessonNum} and LESSON_WEEK = #{lessonWeek} ]]>
	</select>
</mapper>